server:
  port: 8200

spring:
  application:
    name: order-service
  sql:
    init:
      mode: always
  datasource:
    url: jdbc:mysql://wittdbreal.chr10oalkvb3.ap-northeast-2.rds.amazonaws.com:3306/order_directory
    username: admin
    password: RKAWK78044*
    driver-class-name: com.mysql.cj.jdbc.Driver


  jpa:
    hibernate:
      show-sql: false
      ddl-auto: update
      properties:
        hibernate.format_sql: true
    database: mysql
  #
  # Redis
  #
  data:
    redis:
      host: localhost
      port: 6379

  #
  # kafka
  #
  kafka:
    bootstrap-servers: 43.202.136.98:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.LongSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    streams:
      properties:
          application-id: order-streams
          default.key.serde: org.apache.kafka.common.serialization.Serdes$LongSerde
          default.value.serde: org.springframework.kafka.support.serializer.JsonSerde



eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka


logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.orm.jdbc.bind: trace

#
# Grpc Settings
#
grpc:
  client:
    member-service:
      address: 'discovery:///member-service'
      enableKeepAlive: true
      keepAliveWithoutCalls: true
      negotiationType: plaintext
    item-service:
      address: 'discovery:///item-service'
      enableKeepAlive: true
      keepAliveWithoutCalls: true
      negotiationType: plaintext

