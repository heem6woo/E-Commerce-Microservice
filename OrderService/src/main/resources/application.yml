server:
  port: 8200

spring:
  application:
    name: order-service
  sql:
    init:
      mode: always
  datasource:
    url: jdbc:mysql://wittdbreal.chr10oalkvb3.ap-northeast-2.rds.amazonaws.com:3306/order_directory
    username: admin
    password: 1q2w3e4r!!
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      show-sql: false
      ddl-auto: update
      properties:
        hibernate.format_sql: true
    database: mysql

  #
  # kafka
  #
  kafka:
    bootstrap-servers: 43.202.136.98:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.LongSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

    streams:
      properties:
        application-id: order-streams
        default.key.serde: org.apache.kafka.common.serialization.Serdes$LongSerde
        default.value.serde: org.springframework.kafka.support.serializer.JsonSerde
        spring.json.trusted.packages: com.ecommerce.common.*
        replication-factor: 3
        num.standby.replicas: 1
        processing.guarantee: exactly_once_v2






eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka


management:
  tracing:
    sampling:
      probability: 1.0


logging:
  file:
    path: /hong/Logs/ec-spring
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'
  level:
    org.hibernate.SQL: debug
    org.hibernate.orm.jdbc.bind: trace


#
# Grpc Settings
#
grpc:
  client:
    member-service:
      address: 'discovery:///member-service'
      enableKeepAlive: true
      keepAliveWithoutCalls: true
      negotiationType: plaintext
    item-service:
      address: 'discovery:///item-service'
      enableKeepAlive: true
      keepAliveWithoutCalls: true
      negotiationType: plaintext

