plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'

}


group = 'com.ecommerce'
version = '0.0.1-SNAPSHOT'


java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.1")
    set( 'grpcVersion', '3.1.0.RELEASE')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    runtimeOnly 'mysql:mysql-connector-java:8.0.32'

//    grpc client dependency
    implementation 'net.devh:grpc-client-spring-boot-starter:3.1.0.RELEASE'
    implementation files('libs/GrpcInterface-1.0-SNAPSHOT.jar')

    implementation 'io.grpc:grpc-netty-shaded'

    // Micrometer for observation
    implementation 'io.micrometer:micrometer-observation'

    // Micrometer bridge for OpenTelemetry
    implementation 'io.micrometer:micrometer-tracing-bridge-otel'

    // OpenTelemetry exporter for Zipkin
    implementation 'io.opentelemetry:opentelemetry-exporter-zipkin'

    runtimeOnly 'com.h2database:h2'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
